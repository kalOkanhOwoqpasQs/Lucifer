for i, bot in pairs(getBots()) do
    if getBot().name:upper() == bot.name:upper() then
        pcallBot = i
    end
end

worlds = {}
initialize = {}
botBackup = {}
local customizable = {
    seed = block + 1,
    index = 1,
    indexPack = 0,
    indexSeed = 0,
    indexBlock = 0,
    indexEvent = 0,
    variableBlock = 1,
    variableSeed = 1,
    variablePack = 1,
    variableEvent = 1,
    variableBackup = 1,
    formatTime = os.time(),
    seedX = dropseedX - 1,
    seedY = dropseedY - 1,
    packX = droppackX - 1,
    packY = droppackY - 1,
    blockX = dropblockX - 1,
    blockY = dropblockY - 1,
    eventX = dropeventX - 1,
    eventY = dropeventY -1
}

if pcallBot then
    tileY = 1 + ((pcallBot - 1) * 2)
    action = #getBots() * 2
    getBot().legit_mode = false
    getBot().move_range = moveRange
    getBot().move_interval = moveInterval
    getBot().auto_reconnect = false
    if ignoregems then
        getBot().ignore_gems = true
    end
    for i =  1,worldperbot do
        table.insert(worlds,farmList[math.floor((pcallBot - 1) * worldperbot + i)])
    end
    for i =  1,botperswitch do
        table.insert(botBackup,botSwitch[math.floor((pcallBot - 1) * botperswitch + i)])
    end
end

customizable.itemRecycle = function()
    if getBot():getInventory():getItemCount(block) > 0 then
        getBot():sendPacket(2,"action|trash\n|itemID|"..block)
        sleep(1000)
        getBot():sendPacket(2,"action|dialog_return\ndialog_name|trash_item\nitemID|" .. block .. "|\ncount|" .. getBot():getInventory():getItemCount(block))
        sleep(1000)
    end
end

customizable.split = function(str, ptr)
    if not ptr then 
        ptr = "%s"
    end
    local tbl = {}
    for string in string.gmatch(str, ptr) do
        table.insert(tbl, string) 
    end
    return tbl
end

customizable.initBot = function()
    str = ""
    for i, val in pairs(getBots()) do
        if val.status == BotStatus.online then
            enet = "Online"
        elseif val.status == BotStatus.account_banned  then
            enet = "Suspended"
        elseif val.status == BotStatus.error_connecting  then
            enet = "Ercon"
        else
            enet = "Disconnect"
        end
        str = str.."\n"..enet.."" 
    end
    return str
end

customizable.initStatus = function()
    str = ""
    for _, bot in pairs(getBots()) do
        str = str.."\n["..bot.level.."]||"..string.upper(bot.name).."||" 
    end
    return str
end

customizable.initWorld = function()
    str = ""
    for _, bots in pairs(getBots()) do
        str = str.."\n||"..string.upper(bots:getWorld().name).."||" 
    end
    return str
end

customizable.getAllGems = function()
    local count = 0
    for _,bot in pairs(getBots()) do
        count = count + bot.gem_count
    end
    return count
end

customizable.initBlock = function()
    str = ""
	for i = 1, #storageblock do
        str = str.."\n||"..string.upper(storageblock[i]).."|| : "..(initialize[storageblock[i]] or "?")..""
    end
    return str
end

customizable.initSeed = function()
    str = ""
	for i = 1, #storageseed do
        str = str.."\n||"..string.upper(storageseed[i]).."|| : "..(initialize[storageseed[i]] or "?")..""
    end
    return str
end

customizable.initPack = function()
    str = ""
	for i = 1, #storagepack do
        str = str.."\n||"..string.upper(storagepack[i]).."|| : "..(initialize[storagepack[i]] or "?")..""
    end
    return str
end

customizable.initEvent = function()
    str = ""
	for i = 1, #storageevent do
        str = str.."\n||"..string.upper(storageevent[i]).."|| : "..(initialize[storageevent[i]] or "?")..""
    end
    return str
end

customizable.initializeBots = function()
	if botinfo then
        realtime = os.time() - customizable.formatTime
        local text = [[
            $webHookUrl = "]]..linkbotinfo..[[/messages/]]..messageidbotinfo..[["
            $payload = @{
                username = "Caramoy's"
                embeds = @(
                    @{
                        title = "Caramoy Syndicate : https://discord.com/invite/fTTKW8vvuq"
                        color = "]]..math.random(111111,999999)..[["
                        fields = @(
                            @{
                                name = ""
                                value = "]].."RUNTIME : "..math.floor(realtime/86400).." Days "..math.floor(realtime%86400/3600).." Hours "..math.floor(realtime%86400%3600/60).." Minutes"..[["
                                inline = "false"
                            }
                            @{
                                name = ""
                                value = "]].."TOTAL GEMS : "..customizable.getAllGems()..[["
                                inline = "false"
                            }
                            @{
                                name = "BOTNAME"
                                value = "]]..customizable.initStatus()..[["
                                inline = "true"
                            }
                            @{
                                name = "WORLD"
                                value = "]]..customizable.initWorld()..[["
                                inline = "true"
                            }
                            @{
                                name = "STATUS"
                                value = "]]..customizable.initBot()..[["
                                inline = "true"
                            }
                        )
                        footer = @{
                            text = "[Lucifer] : Harvest Script`nLast update : ]]..(os.date("!%a %b %d, %Y at %I:%M %p", os.time() + 7 * 60 * 60))..[["
                        }
                    }
                )
            }
            
            [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
            Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Patch -ContentType 'application/json'
        ]]
        local pipe = io.popen("powershell -command -", "w")
        pipe:write(text)
        pipe:close()
    end
end

customizable.initializeOnStorage = function()
	if botinfo then
        local text = [[
            $webHookUrl = "]]..linkstorageinfo..[[/messages/]]..messageidstorageinfo..[["
            $payload = @{
                username = "Caramoy's"
                embeds = @(
                    @{
                        title = "Caramoy Syndicate : https://discord.com/invite/fTTKW8vvuq"
                        color = "]]..math.random(111111,999999)..[["
                        fields = @(
                            @{
                                name = "STORAGE BLOCK"
                                value = "]]..customizable.initBlock()..[["
                                inline = "true"
                            }
                            @{
                                name = "STORAGE SEED"
                                value = "]]..customizable.initSeed()..[["
                                inline = "true"
                            }
                            @{
                                name = "STORAGE PACK"
                                value = "]]..customizable.initPack()..[["
                                inline = "true"
                            }
                            @{
                                name = "STORAGE EVENT"
                                value = "]]..customizable.initEvent()..[["
                                inline = "true"
                            }
                        )
                        footer = @{
                            text = "[Lucifer] : Harvest Script`nLast update : ]]..(os.date("!%a %b %d, %Y at %I:%M %p", os.time() + 7 * 60 * 60))..[["
                        }
                    }
                )
            }
            
            [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
            Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Patch -ContentType 'application/json'
        ]]
        local pipe = io.popen("powershell -command -", "w")
        pipe:write(text)
        pipe:close()
    end
end

customizable.botStatics = function(text)
    if webhookstatus then
        text = [[
            $webHookUrl = "]]..webhookstatuslink..[["
            $payload = @{
                content = "]]..text..[["
            }
            
            [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
            Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Post -ContentType "application/json"
        ]]
        local file = io.popen("powershell -command -", "w")
        file:write(text)
        file:close()
    end
end

customizable.reconnect = function(world,id,x,y)
    if getBot():getPing() == 0 then
        getBot():disconnect()
        sleep(2000)
    end
    if getBot().status ~= BotStatus.online then
        customizable.botStatics("("..getBot().name..") status is offline @everyone")
        while getBot().status ~= BotStatus.online do
            getBot():connect()
            sleep(delayreconnect)
            if getBot().status == BotStatus.account_banned then
                customizable.botStatics("("..getBot().name..") status is suspended, removing bot @everyone")
                getBot():stopScript()
            end
        end
        local counts = 0
        while not getBot():isInWorld(world:upper()) do
            getBot():sendPacket(3,"action|join_request\nname|"..world:upper().."\ninvitedWorld|0")
            sleep(delaywarp)
            if not getBot():isInWorld(world:upper()) then 
                counts = counts + 1
                if counts > 5 then
                    customizable.botStatics("("..getBot().name..") Failed to joining world again, terminated script @everyone")
                    getBot():stopScript()
                end
            end
        end
        if id ~= "" then
            local stuckk = 0
            while getTile(getBot().x,getBot().y).fg == 6 do
                getBot():sendPacket(3,"action|join_request\nname|" ..world:upper().."|"..id:upper().."\ninvitedWorld|0")
                sleep(delaywarp)
                if stuckk > 3 then
                    customizable.botStatics("("..getBot().name..") Failed to reconnecting bot, stuck at white door. Terminated script @everyone")
                    getBot():stopScript()
                end
            end
        end
        if x and y then
            while getBot().x ~= x or getBot().y ~= y do
                getBot():findPath(x,y)
                sleep(150)
            end
        end
        customizable.botStatics("("..getBot().name..") status is online @everyone")
    end
end

customizable.warp = function(world,door,cooldown)
    name = world
    if door ~= "" then
        name = name .. "|" ..door
    end
    if not getBot():isInWorld(world:upper()) then
        addEvent(Event.variantlist, function(variant, netid)
            if variant:get(0):getString() == "OnConsoleMessage" then
                if variant:get(1):getString():lower():find("inaccessible.") then
                    nuked = true
                end
            end
        end)
        while not getBot():isInWorld(world:upper()) and not nuked do
            if getBot():getPing() == 0 then
                getBot():disconnect()
                sleep(2000)
            end
            if getBot().status ~= BotStatus.online then
                customizable.botStatics("("..getBot().name..") status is offline @everyone")
                while getBot().status ~= BotStatus.online do
                    getBot():connect()
                    sleep(delayreconnect)
                    if getBot().status == BotStatus.account_banned then
                        customizable.botStatics("("..getBot().name..") status is suspended, removing bot @everyone")
                        getBot():stopScript()
                    end
                end
                customizable.botStatics("("..getBot().name..") status is online @everyone")
            end
            getBot():sendPacket(3,"action|join_request\nname|"..name.."\ninvitedWorld|0")
            listenEvents(8)
            sleep(cooldown)
        end
        removeEvents()
        sleep(2000)
    end
    if getBot():isInWorld(world:upper()) then
        if door ~= "" then
            local stuck = 0
            while getTile(getBot().x,getBot().y).fg == 6 and not wrong do
                if getBot():getPing() == 0 then
                    getBot():disconnect()
                    sleep(2000)
                end
                if getBot().status ~= BotStatus.online then
                    customizable.botStatics("("..getBot().name..") status is offline @everyone")
                    while getBot().status ~= BotStatus.online do
                        getBot():connect()
                        sleep(delayreconnect)
                        if getBot().status == BotStatus.account_banned then
                            customizable.botStatics("("..getBot().name..") status is suspended, removing bot @everyone")
                            getBot():stopScript()
                        end
                    end
                    customizable.botStatics("("..getBot().name..") status is online @everyone")
                end
                getBot():sendPacket(3,"action|join_request\nname|"..name.."\ninvitedWorld|0")
                sleep(cooldown)
                stuck = stuck + 1
                if stuck == 5 then
                    wrong = true
                end
            end
        end
    end
end

customizable.itemFloat = function(id)
    return getBot():getWorld().growscan:getObjects()[id] or 0
end

customizable.joinRandom = function()
    print("["..pcallBot.."]Clearing history")
    for idx, value in ipairs(worldclearhistory) do
        customizable.warp(value,"",5000)
        if not nuked then
            customizable.reconnect(value,"")
        else
            nuked = false
            print("["..pcallBot.."]World clearing history has nuked or higher level!!, change ur world history list")
            customizable.botStatics("World clearing history has nuked or higher level!!, change ur world history list. SC Terminated @everyone")
            getBot():stopScript()
        end
    end
end

customizable.buying = function()
    print("["..pcallBot.."]Buying packs")
    if upbackpack then
        while getBot():getInventory().slotcount < 36 do
            getBot():sendPacket(2,"action|buy\nitem|upgrade_backpack")
            sleep(1000)
        end
    end
    while getBot().gem_count >= pricepack do
        getBot():sendPacket(2,"action|buy\nitem|"..debug)
        sleep(1000)
    end
end

customizable.onEvent = function()
    for i = customizable.variableEvent , #storageevent do
        print("["..pcallBot.."]Dropping events")
        world = storageevent[i]
        customizable.warp(world,doorstorageevent,delaywarp)
        if not nuked then
            if not wrong then
                if customizable.itemFloat(itemevent[1]) >= limitevent then
                    initialize[world] = ""..customizable.itemFloat(itemevent[1]).."x (LIMIT)"
                    customizable.botStatics("Events storage : ("..world..") has reached limit, skipped world @everyone")
                    print("["..pcallBot.."]Events storage : ("..world..") has reached limit, skipped world")
                    customizable.variableEvent = customizable.variableEvent + 1
                    if customizable.variableEvent > #storageevent then
                        initialize[world] = ""..customizable.itemFloat(itemevent[1]).."x (LIMIT)"
                        customizable.botStatics("All events storage has reached limit, Removing bot : ("..getBot().name..") @everyone")
                        print("["..pcallBot.."]All events storage has reached limit, Removing bot : ("..getBot().name..")")
                        customizable.initializeBots()
                        if removingbot then
                            removeBot()
                            sleep(2000)
                        end
                        getBot():stopScript()
                    end
                    customizable.indexEvent = 0
                else
                    for y,pack in pairs(itemevent) do
                        for i,tile in pairs(getBot():getWorld():getTiles()) do
                            if separated then
                                if tile.fg == 0 or tile.bg == 0 then
                                    ::BACK::
                                    getBot():findPath(customizable.eventX + (customizable.indexEvent),customizable.eventY - (y - 1))
                                    sleep(500)
                                    local count = 0
                                    customizable.reconnect(world,doorstorageevent,customizable.eventX + (customizable.indexEvent),customizable.eventY - (y - 1))
                                    if customizable.eventX + (customizable.indexEvent) >= 98 then
                                        customizable.eventY = customizable.eventY - 1
                                        customizable.indexEvent = 0
                                    end
                                    while getBot():getInventory():getItemCount(pack) > 0 do
                                        getBot():drop(pack,200)
                                        sleep(delaydrop)
                                        customizable.reconnect(world,doorstorageevent,customizable.eventX + (customizable.indexEvent),customizable.eventY - (y - 1))
                                        count = count + 1
                                        if count >= 2 then
                                            customizable.indexEvent = customizable.indexEvent + 1
                                            goto BACK
                                        end
                                    end
                                end
                                if getBot():getInventory():getItemCount(pack) == 0 then
                                    break
                                end
                            else
                                if tile.fg == 0 or tile.bg == 0 then
                                    ::BACK::
                                    getBot():findPath(customizable.eventX + (customizable.indexEvent),customizable.eventY)
                                    sleep(500)
                                    local count = 0
                                    customizable.reconnect(world,doorstorageevent,customizable.eventX + (customizable.indexEvent),customizable.eventY)
                                    if customizable.eventX + (customizable.indexEvent) >= 98 then
                                        customizable.eventY = customizable.eventY - 1
                                        customizable.indexEvent = 0
                                    end
                                    while getBot():getInventory():getItemCount(pack) > 0 do
                                        getBot():drop(pack,200)
                                        sleep(delaydrop)
                                        customizable.reconnect(world,doorstorageevent,customizable.eventX + (customizable.indexEvent),customizable.eventY)
                                        count = count + 1
                                        if count >= 2 then
                                            customizable.indexEvent = customizable.indexEvent + 1
                                            goto BACK
                                        end
                                    end
                                end
                                if getBot():getInventory():getItemCount(pack) == 0 then
                                    break
                                end
                            end
                        end
                    end
                    break
                end
            else
                initialize[world] = "WRONG DOOR"
                wrong = false
                print("["..pcallBot.."]("..world..") Id door events storage is wrong, check ur id door!")
                customizable.botStatics("("..world..") Id door events storage is wrong, check ur id door! @everyone")
                customizable.variableEvent = customizable.variableEvent + 1
                if customizable.variableEvent > #storageevent then
                    print("["..pcallBot.."]All events storage has reached limit")
                    customizable.botStatics("All events storage has reached limit! Removing bot : ("..getBot().name..") @everyone")
                    if removingbot then
                        removeBot()
                        sleep(2000)
                    end
                    getBot():stopScript()
                end
                customizable.indexEvent = 0
            end
        else
            initialize[world] = "NUKED"
            nuked = false
            print("["..pcallBot.."]("..world..") event Storage is NUKED, check ur storage!")
            customizable.botStatics("("..world..") event Storage is NUKED, check ur storage! @everyone")
            customizable.variableEvent = customizable.variableEvent + 1
            if customizable.variableEvent > #storageevent then
                print("["..pcallBot.."]All events storage has reached limit!")
                customizable.botStatics("All events storage has reached limit! Removing bot : ("..getBot().name..") @everyone")
                if removingbot then
                    removeBot()
                    sleep(2000)
                end
                getBot():stopScript()
            end
            customizable.indexEvent = 0
        end
    end
    initialize[world] = ""..customizable.itemFloat(itemevent[1]).."x"
    customizable.initializeOnStorage()
    if clearhistory then
        customizable.joinRandom()
    end
end

customizable.onPack = function()
    for i = customizable.variablePack , #storagepack do
        print("["..pcallBot.."]Dropping packs")
        world = storagepack[i]
        customizable.warp(world,doorstoragepack,delaywarp)
        if not nuked then
            if not wrong then
                if customizable.itemFloat(packList[1]) >= limitpack then
                    initialize[world] = "x"..customizable.itemFloat(packList[1]).."x (LIMIT)"
                    customizable.botStatics("Packs storage : ("..world..") has reached limit, skipped world @everyone")
                    print("["..pcallBot.."]Packs storage : ("..world..") has reached limit, skipped world")
                    customizable.variablePack = customizable.variablePack + 1
                    if customizable.variablePack > #storagepack then
                        initialize[world] = "x"..customizable.itemFloat(packList[1]).."x (LIMIT)"
                        customizable.botStatics("All packs storage has reached limit, Removing bot : ("..getBot().name..") @everyone")
                        print("["..pcallBot.."]All packs storage has reached limit, Removing bot : ("..getBot().name..")")
                        customizable.initializeBots()
                        if removingbot then
                            removeBot()
                            sleep(2000)
                        end
                        getBot():stopScript()
                    end
                    customizable.indexPack = 0
                else
                    for y,pack in pairs(packList) do
                        for i,tile in pairs(getBot():getWorld():getTiles()) do
                            if separated then
                                if tile.fg == 0 or tile.bg == 0 then
                                    ::BACK::
                                    getBot():findPath(customizable.packX + (customizable.indexPack),customizable.packY - (y-1))
                                    sleep(500)
                                    local count = 0
                                    customizable.reconnect(world,doorstoragepack,customizable.packX + (customizable.indexPack),customizable.packY - (y-1))
                                    if customizable.packX + (customizable.indexPack) >= 98 then
                                        customizable.packY = customizable.packY - 1
                                        customizable.indexPack = 0
                                    end
                                    while getBot():getInventory():getItemCount(pack) > 0 do
                                        getBot():drop(pack,200)
                                        sleep(delaydrop)
                                        customizable.reconnect(world,doorstoragepack,customizable.packX + (customizable.indexPack),customizable.packY - (y-1))
                                        count = count + 1
                                        if count >= 2 then
                                            customizable.indexPack = customizable.indexPack + 1
                                            goto BACK
                                        end
                                    end
                                end
                                if getBot():getInventory():getItemCount(pack) == 0 then
                                    break
                                end
                            else
                                if tile.fg == 0 or tile.bg == 0 then
                                    ::BACK::
                                    getBot():findPath(customizable.packX + (customizable.indexPack),customizable.packY)
                                    sleep(500)
                                    local count = 0
                                    customizable.reconnect(world,doorstoragepack,customizable.packX + (customizable.indexPack),customizable.packY)
                                    if customizable.packX + (customizable.indexPack) >= 98 then
                                        customizable.packY = customizable.packY - 1
                                        customizable.indexPack = 0
                                    end
                                    while getBot():getInventory():getItemCount(pack) > 0 do
                                        getBot():drop(pack,200)
                                        sleep(delaydrop)
                                        customizable.reconnect(world,doorstoragepack,customizable.packX + (customizable.indexPack),customizable.packY)
                                        count = count + 1
                                        if count >= 2 then
                                            customizable.indexPack = customizable.indexPack + 1
                                            goto BACK
                                        end
                                    end
                                end
                                if getBot():getInventory():getItemCount(pack) == 0 then
                                    break
                                end
                            end
                        end
                    end
                    break
                end
            else
                initialize[world] = "WRONG DOOR"
                wrong = false
                print("["..pcallBot.."]("..world..") Id door packs storage is wrong, check ur id door!")
                customizable.botStatics("("..world..") Id door packs storage is wrong, check ur id door! @everyone")
                customizable.variablePack = customizable.variablePack + 1
                if customizable.variablePack > #storagepack then
                    print("["..pcallBot.."]All packs storage has reached limit")
                    customizable.botStatics("All packs storage has reached limit! Removing bot : ("..getBot().name..") @everyone")
                    if removingbot then
                        removeBot()
                        sleep(2000)
                    end
                    getBot():stopScript()
                end
                customizable.indexPack = 0
            end
        else
            initialize[world] = "NUKED"
            nuked = false
            print("["..pcallBot.."]("..world..") packs Storage is NUKED, check ur storage!")
            customizable.botStatics("("..world..") packs Storage is NUKED, check ur storage! @everyone")
            customizable.variablePack = customizable.variablePack + 1
            if customizable.variablePack > #storagepack then
                print("["..pcallBot.."]All packs storage has reached limit!")
                customizable.botStatics("All packs storage has reached limit! Removing bot : ("..getBot().name..") @everyone")
                if removingbot then
                    removeBot()
                    sleep(2000)
                end
                getBot():stopScript()
            end
            customizable.indexPack = 0
        end
    end
    initialize[world] = ""..customizable.itemFloat(packList[1]).."x"
    customizable.initializeOnStorage()
    if clearhistory then
        customizable.joinRandom()
    end
end

customizable.onSeed = function()
    for i = customizable.variableSeed , #storageseed do
        world = storageseed[i]
        print("["..pcallBot.."]Dropping seeds")
        customizable.warp(world,doorstorageseed,delaywarp)
        if not nuked then
            if not wrong then
                if customizable.itemFloat(customizable.seed) >= limitseed then
                    initialize[world] = ""..customizable.itemFloat(customizable.seed).."x (LIMIT)"
                    customizable.botStatics("Seeds storage : ("..world..") has reached limit, skipped world @everyone")
                    print("["..pcallBot.."]Seeds storage : ("..world..") has reached limit, skipped world")
                    customizable.variableSeed = customizable.variableSeed + 1
                    if customizable.variableSeed > #storageseed then
                        initialize[world] = ""..customizable.itemFloat(customizable.seed).."x (LIMIT)"
                        customizable.botStatics("All seeds storage has reached limit, Removing bot : ("..getBot().name..") @everyone")
                        print("["..pcallBot.."]All seeds storage has reached limit, Removing bot : ("..getBot().name..") @everyone")
                        customizable.initializeBots()
                        if removingbot then
                            removeBot()
                            sleep(2000)
                        end
                        getBot():stopScript()
                    end
                    customizable.indexSeed = 0
                else
                    for i,tile in pairs(getBot():getWorld():getTiles()) do
                        if tile.fg == 0 or tile.bg == 0 then
                            ::BACK::
                            getBot():findPath(customizable.seedX + (customizable.indexSeed),customizable.seedY)
                            sleep(500)
                            local count = 0
                            customizable.reconnect(world,doorstorageseed,customizable.seedX + (customizable.indexSeed),customizable.seedY)
                            if customizable.seedX + (customizable.indexSeed) >= 98 then
                                customizable.seedY = customizable.seedY - 1
                                customizable.indexSeed = 0
                            end
                            while getBot():getInventory():getItemCount(customizable.seed) > 0 do
                                getBot():drop(customizable.seed,200)
                                sleep(delaydrop)
                                customizable.reconnect(world,doorstorageseed,customizable.seedX + (customizable.indexSeed),customizable.seedY)
                                count = count + 1
                                if count >= 2 then
                                    customizable.indexSeed = customizable.indexSeed + 1
                                    goto BACK
                                end
                            end
                        end
                        if getBot():getInventory():getItemCount(customizable.seed) == 0 then
                            break
                        end
                    end
                    break
                end
            else
                initialize[world] = "WRONG DOOR"
                wrong = false
                print("["..pcallBot.."]("..world..") Id door seeds storage is wrong, check ur id door!")
                customizable.botStatics("("..world..") Id door seeds storage is wrong, check ur id door! @everyone")
                customizable.variableSeed = customizable.variableSeed + 1
                if customizable.variableSeed > #storageseed then
                    print("["..pcallBot.."]All seeds storage has reached limit")
                    customizable.botStatics("All seeds storage has reached limit @everyone")
                    if removingbot then
                        removeBot()
                        sleep(2000)
                    end
                    getBot():stopScript()
                end
                customizable.indexSeed = 0
            end
        else
            initialize[world] = "NUKED"
            nuked = false
            print("["..pcallBot.."]("..world..") seeds Storage is NUKED, check ur storage!")
            customizable.botStatics("("..world..") seeds Storage is NUKED, check ur storage! @everyone")
            customizable.variableSeed = customizable.variableSeed + 1
            if customizable.variableSeed > #storageseed then
                print("["..pcallBot.."]All seeds storage has reached limit!")
                customizable.botStatics("All seeds storage has reached limit! @everyone")
                if removingbot then
                    removeBot()
                    sleep(2000)
                end
                getBot():stopScript()
            end
            customizable.indexSeed = 0
        end
    end
    initialize[world] = ""..customizable.itemFloat(customizable.seed).."x"
    customizable.initializeOnStorage()
    if clearhistory then
        customizable.joinRandom()
    end
end

customizable.onBlock = function()
    for i = customizable.variableBlock , #storageblock do
        world = storageblock[i]
        print("["..pcallBot.."]Dropping Blocks")
        customizable.warp(world,doorstorageblock,delaywarp)
        if not nuked then
            if not wrong then
                if customizable.itemFloat(block) >= limitblock then
                    initialize[world] = ""..customizable.itemFloat(block).."x (LIMIT)"
                    customizable.botStatics("Blocks storage : ("..world..") has reached limit, skipped world @everyone")
                    print("["..pcallBot.."]Blocks storage : ("..world..") has reached limit, skipped world")
                    customizable.variableBlock = customizable.variableBlock + 1
                    if customizable.variableBlock > #storageblock then
                        initialize[world] = ""..customizable.itemFloat(block).."x (LIMIT)"
                        customizable.botStatics("All blocks storage has reached limit, Removing bot : ("..getBot().name..") @everyone")
                        print("["..pcallBot.."]All blocks storage has reached limit, Removing bot : ("..getBot().name..") @everyone")
                        customizable.initializeBots()
                        if removingbot then
                            removeBot()
                            sleep(2000)
                        end
                        getBot():stopScript()
                    end
                    customizable.indexBlock = 0
                else
                    for i,tile in pairs(getBot():getWorld():getTiles()) do
                        if tile.fg == 0 or tile.bg == 0 then
                            ::BACK::
                            getBot():findPath(customizable.blockX + (customizable.indexBlock),customizable.blockY)
                            sleep(500)
                            local count = 0
                            customizable.reconnect(world,doorstorageblock,customizable.blockX + (customizable.indexBlock),customizable.blockY)
                            if customizable.blockX + (customizable.indexBlock) >= 98 then
                                customizable.blockY = customizable.blockY - 1
                                customizable.indexBlock = 0
                            end
                            while getBot():getInventory():getItemCount(block) > 0 do
                                getBot():drop(block,200)
                                sleep(delaydrop)
                                customizable.reconnect(world,doorstorageblock,customizable.blockX + (customizable.indexBlock),customizable.blockY)
                                count = count + 1
                                if count >= 2 then
                                    customizable.indexBlock = customizable.indexBlock + 1
                                    goto BACK
                                end
                            end
                        end
                        if getBot():getInventory():getItemCount(block) == 0 then
                            break
                        end
                    end
                    break
                end
            else
                initialize[world] = "WRONG DOOR"
                wrong = false
                print("["..pcallBot.."]("..world..") Id door blocks storage is wrong, check ur id door!")
                customizable.botStatics("("..world..") Id door blocks storage is wrong, check ur id door! @everyone")
                customizable.variableBlock = customizable.variableBlock + 1
                if customizable.variableBlock > #storageblock then
                    print("["..pcallBot.."]All blocks storage has reached limit")
                    customizable.botStatics("All blocks storage has reached limit @everyone")
                    if removingbot then
                        removeBot()
                        sleep(2000)
                    end
                    getBot():stopScript()
                end
                customizable.indexBlock = 0
            end
        else
            initialize[world] = "NUKED"
            nuked = false
            print("["..pcallBot.."]("..world..") blocks Storage is NUKED, check ur storage!")
            customizable.botStatics("("..world..") blocks Storage is NUKED, check ur storage! @everyone")
            customizable.variableBlock = customizable.variableBlock + 1
            if customizable.variableBlock > #storageblock then
                print("["..pcallBot.."]All blocks storage has reached limit!")
                customizable.botStatics("All blocks storage has reached limit! @everyone")
                if removingbot then
                    removeBot()
                    sleep(2000)
                end
                getBot():stopScript()
            end
            customizable.indexBlock = 0
        end
    end
    initialize[world] = ""..customizable.itemFloat(block).."x"
    customizable.initializeOnStorage()
    if clearhistory then
        customizable.joinRandom()
    end
end

customizable.recheckingWorld = function(threads)
    ::BACK::
    print("["..pcallBot.."]Rechecking")
    for i = 1, 2 do
        if not multiplebot then
            for idx, tile in ipairs(getBot():getWorld():getTiles()) do
                if getTile(tile.x,tile.y).fg == customizable.seed and getTile(tile.x,tile.y):canHarvest() then
                    getBot():findPath(tile.x,tile.y)
                    sleep(30)
                    customizable.reconnect(threads,doorfarmList,tile.x,tile.y)
                    if getTile(tile.x,tile.y).fg == customizable.seed then
                        getBot():hit(tile.x,tile.y)
                        sleep(delayharvest)
                        customizable.reconnect(threads,doorfarmList,tile.x,tile.y)
                    end
                    getBot():collect(range)
                    sleep(30)
                end
                if getBot():getInventory():getItemCount(idwearitem) == 0 and wearitem then
                    while getBot():getInventory():getItemCount(idwearitem) == 0 do
                        customizable.wearingItemEvent()
                        sleep(6000)
                    end
                    print("["..pcallBot.."]Rechecking")
                    customizable.warp(threads,doorfarmList,delaywarp)
                    customizable.initializeBots()
                    goto BACK
                end
                if getBot():getInventory():getItemCount(block) >= amountblock then
                    if recycle then
                        customizable.itemRecycle()
                    else
                        customizable.onBlock()
                        print("["..pcallBot.."]Rechecking")
                        customizable.warp(threads,doorfarmList,delaywarp)
                        customizable.initializeBots()
                    end
                    goto BACK
                end
                if autoSwitch and getBot().level >= switchOnLevel then
                    if getBot():getInventory():getItemCount(block) > 0 then
                        customizable.onBlock()
                    end
                    if getBot():getInventory():getItemCount(customizable.seed) > 0 then
                        customizable.onSeed()
                    end
                    customizable.onBackup()
                    customizable.warp(threads,doorfarmList,delaywarp)
                    customizable.initializeBots()
                    goto BACK
                end
                if getBot():getInventory():getItemCount(itemevent[1]) > amount then
                    customizable.onEvent()
                    print("["..pcallBot.."]Rechecking")
                    customizable.warp(threads,doorfarmList,delaywarp)
                    customizable.initializeBots()
                    goto BACK
                elseif getBot():getInventory():getItemCount(customizable.seed) > amountseed then
                    customizable.onSeed()
                    print("["..pcallBot.."]Rechecking")
                    customizable.warp(threads,doorfarmList,delaywarp)
                    customizable.initializeBots()
                    goto BACK
                elseif getBot().gem_count >= mingems and buypack then
                    customizable.buying()
                    customizable.onPack()
                    print("["..pcallBot.."]Rechecking")
                    customizable.warp(threads,doorfarmList,delaywarp)
                    customizable.initializeBots()
                    goto BACK
                end
            end
        else
            for y = tileY, 53, action do
                for x = 0, 99, 1 do
                    if getTile(x,y).fg == customizable.seed and getTile(x,y):canHarvest() then
                        getBot():findPath(x,y)
                        sleep(30)
                        customizable.reconnect(threads,doorfarmList,x,y)
                        if getTile(x,y).fg == customizable.seed then
                            getBot():hit(x,y)
                            sleep(delayharvest)
                            customizable.reconnect(threads,doorfarmList,x,y)
                        end
                        getBot():collect(range)
                        sleep(25)
                    end
                    if getBot():getInventory():getItemCount(idwearitem) == 0 and wearitem then
                        while getBot():getInventory():getItemCount(idwearitem) == 0 do
                            customizable.wearingItemEvent()
                            sleep(6000)
                        end
                        print("["..pcallBot.."]Rechecking")
                        customizable.warp(threads,doorfarmList,delaywarp)
                        customizable.initializeBots()
                        goto BACK
                    end
                    if getBot():getInventory():getItemCount(block) > amountblock then
                        if recycle then
                            customizable.itemRecycle()
                        else
                            customizable.onBlock()
                            print("["..pcallBot.."]Rechecking")
                            customizable.warp(threads,doorfarmList,delaywarp)
                            customizable.initializeBots()
                        end
                        goto BACK
                    end
                    if autoSwitch and getBot().level >= switchOnLevel then
                        if getBot():getInventory():getItemCount(block) > 0 then
                            customizable.onBlock()
                        end
                        if getBot():getInventory():getItemCount(customizable.seed) > 0 then
                            customizable.onSeed()
                        end
                        customizable.onBackup()
                        customizable.warp(threads,doorfarmList,delaywarp)
                        customizable.initializeBots()
                        goto BACK
                    end
                    if getBot():getInventory():getItemCount(itemevent[1]) > amount then
                        customizable.onEvent()
                        print("["..pcallBot.."]Rechecking")
                        customizable.warp(threads,doorfarmList,delaywarp)
                        customizable.initializeBots()
                        goto BACK
                    elseif getBot():getInventory():getItemCount(customizable.seed) > amountseed then
                        customizable.onSeed()
                        print("["..pcallBot.."]Rechecking")
                        customizable.warp(threads,doorfarmList,delaywarp)
                        customizable.initializeBots()
                        goto BACK
                    elseif getBot().gem_count >= mingems and buypack then
                        customizable.buying()
                        customizable.onPack()
                        print("["..pcallBot.."]Rechecking")
                        customizable.warp(threads,doorfarmList,delaywarp)
                        customizable.initializeBots()
                        goto BACK
                    end
                end
            end
        end
        for idx, obj in ipairs(getBot():getWorld():getObjects()) do
            if obj.id == block then
                if customizable.itemFloat(block) ~= 0 then
                    getBot():findPath(math.floor(obj.x / 32),math.floor(obj.y / 32))
                    sleep(30)
                    getBot():collect(range)
                    sleep(30)
                    customizable.reconnect(threads,doorfarmList,math.floor(obj.x / 32),math.floor(obj.y / 32))
                end
                if getBot():getInventory():getItemCount(block) > amountblock then
                    if recycle then
                        customizable.itemRecycle()
                    else
                        customizable.onBlock()
                        print("["..pcallBot.."]Rechecking")
                        customizable.warp(threads,doorfarmList,delaywarp)
                        customizable.initializeBots()
                    end
                    goto BACK
                end
                if getBot():getInventory():getItemCount(itemevent[1]) > amount then
                    customizable.onEvent()
                    print("["..pcallBot.."]Rechecking")
                    customizable.warp(threads,doorfarmList,delaywarp)
                    customizable.initializeBots()
                    goto BACK
                elseif getBot():getInventory():getItemCount(customizable.seed) > amountseed then
                    customizable.onSeed()
                    print("["..pcallBot.."]Rechecking")
                    customizable.warp(threads,doorfarmList,delaywarp)
                    customizable.initializeBots()
                    goto BACK
                elseif getBot().gem_count >= mingems and buypack then
                    customizable.buying()
                    customizable.onPack()
                    print("["..pcallBot.."]Rechecking")
                    customizable.warp(threads,doorfarmList,delaywarp)
                    customizable.initializeBots()
                    goto BACK
                end
            end
        end
    end
end

customizable.harvestWorld = function(threads)
    ::BACK::
    print("["..pcallBot.."]Harvest")
    if not multiplebot then
        for idx, tile in ipairs(getBot():getWorld():getTiles()) do
            if getTile(tile.x,tile.y).fg == customizable.seed and getTile(tile.x,tile.y):canHarvest() then
                getBot():findPath(tile.x,tile.y)
                sleep(30)
                customizable.reconnect(threads,doorfarmList,tile.x,tile.y)
                if getTile(tile.x,tile.y).fg == customizable.seed then
                    getBot():hit(tile.x,tile.y)
                    sleep(delayharvest)
                    customizable.reconnect(threads,doorfarmList,tile.x,tile.y)
                end
                getBot():collect(range)
                sleep(30)
            end
            if getBot():getInventory():getItemCount(idwearitem) == 0 and wearitem then
                while getBot():getInventory():getItemCount(idwearitem) == 0 do
                    customizable.wearingItemEvent()
                    sleep(6000)
                end
                print("["..pcallBot.."]Harvest")
                customizable.warp(threads,doorfarmList,delaywarp)
                customizable.initializeBots()
                goto BACK
            end
            if getBot():getInventory():getItemCount(block) >= amountblock then
                if recycle then
                    customizable.itemRecycle()
                else
                    customizable.onBlock()
                    print("["..pcallBot.."]Harvest")
                    customizable.warp(threads,doorfarmList,delaywarp)
                    customizable.initializeBots()
                end
                goto BACK
            end
            if autoSwitch and getBot().level >= switchOnLevel then
                if getBot():getInventory():getItemCount(block) > 0 then
                    customizable.onBlock()
                end
                if getBot():getInventory():getItemCount(customizable.seed) > 0 then
                    customizable.onSeed()
                end
                customizable.onBackup()
                customizable.warp(threads,doorfarmList,delaywarp)
                customizable.initializeBots()
                goto BACK
            end
            if getBot():getInventory():getItemCount(itemevent[1]) > amount then
                customizable.onEvent()
                print("["..pcallBot.."]Harvest")
                customizable.warp(threads,doorfarmList,delaywarp)
                customizable.initializeBots()
                goto BACK
            elseif getBot():getInventory():getItemCount(customizable.seed) > amountseed then
                customizable.onSeed()
                print("["..pcallBot.."]Harvest")
                customizable.warp(threads,doorfarmList,delaywarp)
                customizable.initializeBots()
                goto BACK
            elseif getBot().gem_count >= mingems and buypack then
                customizable.buying()
                customizable.onPack()
                print("["..pcallBot.."]Harvest")
                customizable.warp(threads,doorfarmList,delaywarp)
                customizable.initializeBots()
                goto BACK
            end
        end
    else
        for y = tileY, 53, action do
            for x = 0, 99, 1 do
                if getTile(x,y).fg == customizable.seed and getTile(x,y):canHarvest() then
                    getBot():findPath(x,y)
                    sleep(30)
                    customizable.reconnect(threads,doorfarmList,x,y)
                    if getTile(x,y).fg == customizable.seed then
                        getBot():hit(x,y)
                        sleep(delayharvest)
                        customizable.reconnect(threads,doorfarmList,x,y)
                    end
                    getBot():collect(range)
                    sleep(25)
                end
                if getBot():getInventory():getItemCount(idwearitem) == 0 and wearitem then
                    while getBot():getInventory():getItemCount(idwearitem) == 0 do
                        customizable.wearingItemEvent()
                        sleep(6000)
                    end
                    print("["..pcallBot.."]Harvest")
                    customizable.warp(threads,doorfarmList,delaywarp)
                    customizable.initializeBots()
                    goto BACK
                end
                if getBot():getInventory():getItemCount(block) > amountblock then
                    if recycle then
                        customizable.itemRecycle()
                    else
                        customizable.onBlock()
                        print("["..pcallBot.."]Harvest")
                        customizable.warp(threads,doorfarmList,delaywarp)
                        customizable.initializeBots()
                        goto BACK
                    end
                end
                if autoSwitch and getBot().level >= switchOnLevel then
                    if getBot():getInventory():getItemCount(block) > 0 then
                        customizable.onBlock()
                    end
                    if getBot():getInventory():getItemCount(customizable.seed) > 0 then
                        customizable.onSeed()
                    end
                    customizable.onBackup()
                    customizable.warp(threads,doorfarmList,delaywarp)
                    customizable.initializeBots()
                    goto BACK
                end
                if getBot():getInventory():getItemCount(itemevent[1]) > amount then
                    customizable.onEvent()
                    print("["..pcallBot.."]Harvest")
                    customizable.warp(threads,doorfarmList,delaywarp)
                    customizable.initializeBots()
                    goto BACK
                elseif getBot():getInventory():getItemCount(customizable.seed) > amountseed then
                    customizable.onSeed()
                    print("["..pcallBot.."]Harvest")
                    customizable.warp(threads,doorfarmList,delaywarp)
                    customizable.initializeBots()
                    goto BACK
                elseif getBot().gem_count >= mingems and buypack then
                    customizable.buying()
                    customizable.onPack()
                    print("["..pcallBot.."]Harvest")
                    customizable.warp(threads,doorfarmList,delaywarp)
                    customizable.initializeBots()
                    goto BACK
                end
            end
        end
    end
end

customizable.wearingItemEvent = function()
    print("["..pcallBot.."]Take support items")
    world = customizable.split(worldwearitem[customizable.index],"[^:]+")[1]
    door = customizable.split(worldwearitem[customizable.index],"[^:]+")[2]
    customizable.warp(world,door,delaywarp)
    if not nuked then
        if not wrong then
            if getBot():getInventory():getItemCount(idwearitem) == 0 and customizable.itemFloat(idwearitem) >= keep then
                for _, obj in pairs(getBot():getWorld():getObjects()) do
                    if obj.id == idwearitem then
                        getBot():findPath(math.floor(obj.x / 32),math.floor(obj.y / 32))
                        sleep(100)
                        getBot():collect(range)
                        sleep(1000)
                        customizable.reconnect(world,door,math.floor(obj.x / 32),math.floor(obj.y / 32))
                    end
                    if getBot():getInventory():getItemCount(idwearitem) > 0  then
                        break
                    end
                end
                if getBot():getInventory():getItemCount(idwearitem) > 0  then
                    getBot():moveTo(1,0)
                    sleep(500)
                    getBot():wear(idwearitem)
                    getBot():setDirection(true)
                    sleep(500)
                    getBot():drop(idwearitem,getBot():getInventory():getItemCount(idwearitem) - keep)
                    sleep(500)
                    print("["..pcallBot.."]("..getBot().name..") Success take and wear the support items!")
                    customizable.botStatics("("..getBot().name..") Success take and wear the support items!")
                end
            else
                print("["..pcallBot.."]Support item is empty, Drop the support item right now!")
                customizable.botStatics("Support item is empty, Drop the support item right now! @everyone")
            end
        else
            wrong = false
            print("["..pcallBot.."]Id door world take support items is wrong, check ur id door!")
            customizable.botStatics("Id door world take support items is wrong, check ur id door! @everyone")
            getBot():stopScript()
        end
    else
        nuked = false
        print("["..pcallBot.."]World take support items is nuked, check ur world!")
        customizable.botStatics("World take support items is nuked, check ur world! @everyone")
        getBot():stopScript()
    end
end

customizable.guestId = function()
    local letter = ""
    local function stringRandom()
        local random = math.random(1,3)
        if random == 1 then
            return string.char(math.random(97,122))
        elseif random == 2 then
            return string.char(math.random(65,90))
        else
            return string.char(math.random(48,57))
        end
    end
    for i = 1, lettername do
        letter = letter..stringRandom()
    end
    return letter
end

customizable.onBackup = function()
    ::BACK::
    customizable.botStatics("Bot : "..getBot().name.." reached max level, switching bot")
    for i = customizable.variableBackup, #botBackup do
        thread = customizable.split(botBackup[i],"([^|]+)")[1]
        threading = customizable.split(botBackup[i],"([^|]+)")[2]
        if typeaccount == "normal" then
            getBot():updateBot(thread,threading)
            sleep(delayloginbot)
        elseif typeaccount == "guest" then
            getBot():updateBot(""..customizable.guestId().."",thread,threading)
            sleep(delayloginbot)
        end
        getBot().auto_reconnect = false
        customizable.botStatics("Succes switching bot to : "..getBot().name.."")
        while getBot().status ~= BotStatus.online do
            getBot():connect()
            sleep(delayreconnect)
            if getBot().status == BotStatus.account_banned then
                customizable.writeFile("NextBotStatus","["..getBot().name.."] status is Suspended")
                customizable.variableBackup = customizable.variableBackup + 1
                if customizable.variableBackup > #botBackup then
                    print("["..pcallBot.."]No more bots to switch, sc terminated")
                    if removingbot then
                        removeBot()
                        sleep(2000)
                    end
                    getBot():stopScript()
                end
                goto BACK
            end
        end
        if getBot().status == BotStatus.online and getBot().level < switchOnLevel then
            break
        elseif getBot().status == BotStatus.online and getBot().level >= switchOnLevel then
            customizable.variableBackup = customizable.variableBackup + 1
            if customizable.variableBackup > #botBackup then
                print("["..pcallBot.."]No more bots to switch, sc terminated")
                if removingbot then
                    removeBot()
                    sleep(2000)
                end
                getBot():stopScript()
            end
            goto BACK
        end
    end
end

customizable.writeFile = function(threads)
    local file = io.open("WorldStatus.txt","a")
    file:write(threads.."\n")
    file:close()
end

customizable.addingBots = function()
    if typeaccount == "guest" then
        for i,bot in pairs(botList) do
            local derr = {}
            for id in bot:gmatch("([^|]+)") do 
                table.insert(derr, id) 
            end
            x = derr[1]
            y = derr[2]
            addBot(""..customizable.guestId().."",x,y)
            sleep(delayloginbot)
        end
    elseif typeaccount == "normal" then
        for i,list in pairs(botList) do
            local derr = {}
            for id in list:gmatch("([^|]+)") do 
                table.insert(derr, id) 
            end
            x = derr[1]
            y = derr[2]
            addBot(x,y)
            sleep(delayloginbot)
        end
    end
end

customizable.setAuth = function()
    if not pcallBot and proxyServerDatabase then
        getProxyManager().custom_http_proxy = true
        getProxyManager().http_cooldown = delayDataBase
        if useDatabaseForMainProxy then
            getProxyManager().use_main_ip = true -- Use Main IP in Data Proxy Tab.
        end
        if setDatabaseType == "http" then
            addDataProxy(proxyDatabase, Proxy.http) 
        elseif setDatabaseType == "https" then
            addDataProxy(proxyDatabase, Proxy.https)
        elseif setDatabaseType == "socks" then
            addDataProxy(proxyDatabase, Proxy.socks5)
        end
    end
    if not pcallBot and withproxy then
        getProxyManager():setLimit(botperproxy)
        for idx, val in pairs(proxyList) do
            getProxyManager():addProxy(val)
        end
    end
end

if Information == "Script Harvest made by Caramoy's Syndicate, Link Discord : https://discord.com/invite/fTTKW8vvuq" and scriptVersion == "0.1" then
    if autologin and not pcallBot then
        customizable.setAuth()
        customizable.addingBots()
    end
    while getBot().status ~= BotStatus.online do
        getBot():connect()
        sleep(delayreconnect)
    end
    sleep(delayexecute * pcallBot)
    if not multiplebot then
        for idx, value in ipairs(worlds) do
            customizable.warp(value,doorfarmList,5000)
            if not nuked then
                if not wrong then
                    customizable.initializeBots()
                    customizable.harvestWorld(value)
                    customizable.recheckingWorld(value)
                else
                    customizable.writeFile("("..value..") is wrong id")
                    wrong = false
                    print("["..pcallBot.."]"..value.." is wrong door id, skipped world")
                    customizable.botStatics("("..value..") is wrong door id, skipped world @everyone")
                end
            else
                customizable.writeFile("("..value..") is NUKED !!")
                nuked = false
                print("["..pcallBot.."]"..value.." is NUKED!, check ur world !!")
                customizable.botStatics("("..value..") is NUKED!, check ur world !! @everyone")
            end
        end
    else
        for idx, value in ipairs(farmList) do
            customizable.warp(value,doorfarmList,5000)
            if not nuked then
                if not wrong then
                    customizable.initializeBots()
                    customizable.harvestWorld(value)
                    customizable.recheckingWorld(value)
                else
                    customizable.writeFile("("..value..") is wrong id")
                    wrong = false
                    print("["..pcallBot.."]"..value.." is wrong door id, skipped world")
                    customizable.botStatics("("..value..") is wrong door id, skipped world @everyone")
                end
            else
                customizable.writeFile("("..value..") is NUKED !!")
                nuked = false
                print("["..pcallBot.."]"..value.." is NUKED!, check ur world !!")
                customizable.botStatics("("..value..") is NUKED!, check ur world !! @everyone")
            end
        end
    end
    print("["..pcallBot.."]("..getBot().name..") Already finished all world, Terminated script!")
    customizable.botStatics("("..getBot().name..") Already finished all world, Terminated script! @everyone")
    print("["..pcallBot.."]Finished all worlds")
    if removingbot then
        removeBot()
        sleep(2000)
    end
else
    print("["..pcallBot.."]Script Harvest made by Caramoy's Syndicate, Link Discord : https://discord.com/invite/fTTKW8vvuq")
    customizable.botStatics("Script Harvest made by Caramoy's Syndicate, Link Discord : https://discord.com/invite/fTTKW8vvuq")
end
